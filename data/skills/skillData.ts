interface Skills {
  stack: string;
  skillList: string[];
}

// export const skills: Skills[] = [
//   {
//     stack: "HTML5 / CSS3",
//     skillList: [
//       "웹 서비스를 설계할 때 시각적인 부분뿐만 아니라 시맨틱한 마크업 구조를 생각하여 만듭니다.",
//       "웹 표준을 지키고 웹 접근성 개선에 노력합니다.",
//       "반응형 웹 디자인을 할 수 있습니다.",
//     ],
//   },
//   {
//     stack: "JavaScript / TypeScript",
//     skillList: [
//       "적절한 함수 분리를 통해 코드의 가독성을 높이고 유지보수성을 향상시킵니다.",
//       "TypeScript의 타입 시스템을 활용하여 개발하는 것을 지향합니다.",
//     ],
//   },
//   {
//     stack: "React",
//     skillList: [
//       "합리적인 방식으로 컴포넌트를 분리하여 컴포넌트의 재사용성을 높입니다.",
//       "React Hooks 사용이 능숙하고 Recoil, Redux 등으로 상태 관리가 가능합니다. ",
//       "라이프 사이클을 이해하며 사용하고, 성능 최적화를 고민합니다.",
//     ],
//   },
//   {
//     stack: "NextJS",
//     skillList: [
//       "CSR, SSG, ISG, SSR 4가지 렌더링 기법에 대해 이해하고, 페이지에 따라 적절한 렌더링 기법을 선택하여 사용할 수 있습니다.",
//       "SEO를 향상시킬 수 있습니다.",
//       "서버 컴포넌트와 클라이언트 컴포넌트의 차이를 알고 상황에 따라 적절히 사용할 수 있습니다. ",
//     ],
//   },
// ];

export const skills: Skills[] = [
  {
    stack: "HTML5 / CSS3",
    skillList: [
      "디자인 전공자로서 시각적인 완성도뿐 아니라 시맨틱한 구조와 웹 접근성을 고려한 마크업을 작성합니다.",
      "접근성을 개선하고, Lighthouse 접근성 점수 100점을 달성한 경험이 있습니다.",
      "반응형 웹 디자인과 다양한 디바이스 대응을 위한 레이아웃 설계에 익숙합니다.",
    ],
  },
  {
    stack: "JavaScript / TypeScript",
    skillList: [
      "함수와 로직을 명확히 분리하여 가독성과 유지보수성을 고려한 구조로 작성합니다.",
      "TypeScript를 활용해 안정적인 타입 기반 개발을 선호하며, 실무에서도 전반적으로 적용하고 있습니다.",
    ],
  },
  {
    stack: "React",
    skillList: [
      "UI의 목적과 사용 맥락에 맞게 컴포넌트를 분리해 재사용성과 유지보수성을 높였습니다.",
      "React Hooks에 익숙하며, 상태 관리는 Recoil, Redux 등 프로젝트에 맞춰 선택해 사용해봤습니다.",
      "렌더링 최적화와 의존성 관리 등 성능 향상을 위한 고민을 지속해왔습니다.",
    ],
  },
  {
    stack: "Next.js",
    skillList: [
      "CSR, SSG, ISR, SSR 등 렌더링 전략을 이해하고 페이지 성격에 맞게 선택해 적용할 수 있습니다.",
      "메타 태그와 오픈그래프 설정 등을 통해 SEO 개선 경험이 있습니다.",
      "서버 컴포넌트와 클라이언트 컴포넌트의 차이를 이해하고, 코드 분할과 성능 관점에서 적절히 사용합니다.",
    ],
  },
];
